; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs=m5stack

[env:m5atom]
platform = espressif32@3.5.0 ;5.2.0だとなぜかメチャ遅い
board = m5stack-atom
framework = arduino
monitor_speed = 115200
lib_ldf_mode = deep
lib_deps = 
	m5stack/M5Atom @ ^0.0.7
	fastled/FastLED@^3.4.0
	https://github.com/m5stack/M5GFX.git
build_flags =
;[G26]でスピーカーを使用する。CardKBと排他
;-D USE_SPEAKER_G26
;[G25]でスピーカーを使用する。
 -D USE_SPEAKER_G25
;AtomDisplayではなく、240x240LCD、6x8フォントを使用する。SCK:G23/SDA:G33/RES:G19/DC:G22
 -D USE_EXT_LCD
 -D USE_ST7789
 -D USE_HID
;for ST7735S 128x160 LCD
 -D MZ1D05_MODE ;MZ-700モニタ、画面サイズ調整

[env:m5atom_GC9107]
platform = espressif32@3.5.0 ;5.2.0だとなぜかメチャ遅い
board = m5stack-atom
framework = arduino
monitor_speed = 115200
lib_ldf_mode = deep
lib_deps = 
	m5stack/M5Atom ;@ ^0.0.7
	fastled/FastLED ;@^3.4.0
	https://github.com/m5stack/M5GFX.git
	SPI
build_flags =
;[G26]でスピーカーを使用する。CardKBと排他
;-D USE_SPEAKER_G26
;[G25]でスピーカーを使用する。
 -D USE_SPEAKER_G25
;AtomDisplayではなく、128x128LCD、6x8フォントを使用する。SCK:G23/SDA:G33/RES:G19/DC:G22
 -D USE_EXT_LCD
 -D USE_HID
 -D USE_GC9107
;for GC9107 128x128 LCD

[env:m5atom_ST7735S]
platform = espressif32@3.5.0 ;5.2.0だとなぜかメチャ遅い
board = m5stack-atom
framework = arduino
monitor_speed = 115200
lib_ldf_mode = deep+
lib_deps = 
	m5stack/M5Atom @ ^0.0.7
	fastled/FastLED@^3.4.0
	https://github.com/m5stack/M5GFX.git@^0.0.20
build_flags =
;[G26]でスピーカーを使用する。CardKBと排他
;-D USE_SPEAKER_G26
;[G25]でスピーカーを使用する。
  -D USE_SPEAKER_G25
;AtomDisplayではなく、240x240LCD、6x8フォントを使用する。SCK:G23/SDA:G33/RES:G19/DC:G22
  -D USE_EXT_LCD
  -D USE_ST7735S
  -D USE_HID

[env:m5stickcplus]
platform = espressif32@3.5.0 ;5.2.0だとなぜかメチャ遅い
board = m5stick-c
framework = arduino
monitor_speed = 115200
lib_ldf_mode = deep+
lib_deps = 
	m5stack/M5StickCPlus
	https://github.com/m5stack/M5GFX.git
build_flags =
 -D _M5STICKCPLUS
 -D USE_HID

[env:m5atoms3]
platform = espressif32@5.2.0
framework = arduino
platform_packages = platformio/framework-arduinoespressif32@^3.20005.220925
board = esp32-s3-devkitc-1
board_build.mcu = esp32s3
;monitor_rts = 0
;monitor_dtr = 0
lib_ldf_mode = deep
monitor_speed = 115200
;upload_port = /dev/cu.usbmodem14301
upload_speed = 1500000
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_mode = dio
build_flags = 
	;-DCORE_DEBUG_LEVEL=3
	-DCONFIG_IDF_TARGET_ESP32S3
	-D _M5ATOMS3
	;-D USE_HID ;Bluetooth キーボード接続処理は Bluetooth Classic なので使えなさそう。
	;-DARDUINO_USB_MODE=1
	;-DARDUINO_USB_CDC_ON_BOOT=1
	;-D USE_SPEAKER_G25
lib_deps = 
	m5stack/M5Unified @ ^0.1.1
	https://github.com/pfeerick/elapsedMillis


[env:m5atomS3LiteExtLCD]
platform = espressif32@5.2.0
framework = arduino
platform_packages = platformio/framework-arduinoespressif32@^3.20005.220925
board = esp32-s3-devkitc-1
board_build.mcu = esp32s3
;monitor_rts = 0
;monitor_dtr = 0
lib_ldf_mode = deep
monitor_speed = 115200
;upload_port = /dev/cu.usbmodem14301
upload_speed = 1500000
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_mode = dio
build_flags = 
	;-DCORE_DEBUG_LEVEL=3
	-DCONFIG_IDF_TARGET_ESP32S3
	-D _M5ATOMS3LITE
	-D USE_EXT_LCD;240x240LCD、6x8フォントを使用する。SCK:G7/SDA:G8/RES:G6/DC:G5
	;-D USE_HID ;Bluetooth キーボード接続処理は Bluetooth Classic なので使えなさそう。
	;-DARDUINO_USB_MODE=1
	;-DARDUINO_USB_CDC_ON_BOOT=1
	;-D USE_SPEAKER_G25
lib_deps = 
	m5stack/M5Unified @ ^0.1.1
	https://github.com/pfeerick/elapsedMillis
	https://github.com/m5stack/M5GFX.git

[env:m5stack]
;platform = espressif32@3.5.0 ;5.2.0だとなぜかメチャ遅い
;platform = espressif32@5.2.0 ;5.2.0だとなぜかメチャ遅い
platform = espressif32
board = m5stack-core-esp32
framework = arduino
monitor_speed = 115200
lib_ldf_mode = deep+
lib_deps = 
	https://github.com/m5stack/M5Stack
	https://github.com/m5stack/M5Unified
	https://github.com/m5stack/M5GFX.git
	;https://github.com/tobozo/M5Stack-SD-Updater@1.2.8
	;tobozo/M5Stack-SD-Updater@1.0.3
	tobozo/M5Stack-SD-Updater@1.1.3
	https://github.com/m5stack/M5Unit-Synth
build_flags =
 -D _M5STACK
 -D USE_HID	
 ;[G25]でスピーカーを使用する。
 ;  -D USE_SPEAKER_G25
 -D USE_MIDI

[env:m5Stamp]
;M5Stamp と 240x240 外付けLCD
platform = espressif32@3.5.0
board = m5stack-atom
framework = arduino
monitor_speed = 115200
lib_ldf_mode = deep
lib_deps = 
	m5stack/M5Atom
	fastled/FastLED@^3.4.0
	https://github.com/m5stack/M5GFX.git
build_flags =
   -D _M5STAMP
   -D USE_EXT_LCD
   -D USE_HID	
 ;[G25]でスピーカーを使用する。
   -D USE_SPEAKER_G26
   -D EXT_SPI_SCLK=25 ; SCL
   -D EXT_SPI_MOSI=22 ; SDA
   -D EXT_SPI_DC=19   ; DC
   -D EXT_SPI_RST=21  ; RES
   -D EXT_SPI_CS=-1

[env:cardputer]
platform = espressif32
framework = arduino
platform_packages = platformio/framework-arduinoespressif32
board = esp32-s3-devkitc-1
board_build.mcu = esp32s3
lib_ldf_mode = deep
monitor_speed = 115200
upload_speed = 1500000
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_mode = dio
build_flags = 
	-DCONFIG_IDF_TARGET_ESP32S3
	-D _M5CARDPUTER
	;-D USE_HID ;Bluetooth キーボード接続処理は Bluetooth Classic なので使えなさそう。
	;-DARDUINO_USB_MODE=1
	;-DARDUINO_USB_CDC_ON_BOOT=1
	;-D USE_SPEAKER_G25
lib_deps = 
	https://github.com/m5stack/M5Unified
	https://github.com/pfeerick/elapsedMillis
	https://github.com/m5stack/M5Cardputer
	https://github.com/tobozo/M5Stack-SD-Updater@1.2.8


[env:toothbrush]
platform = espressif32
platform_packages = platformio/framework-arduinoespressif32
framework = arduino
board = esp32-c3-devkitm-1
lib_ldf_mode = deep
monitor_speed = 115200

build_flags = 
	;-DCORE_DEBUG_LEVEL=3
	-D _TOOTHBRUSH
	-D USE_EXT_LCD
	-D USE_ST7735S
	-D EXT_SPI_SCLK=6 ; SCL
   -D EXT_SPI_MOSI=7 ; SDA
   -D EXT_SPI_DC=8   ; DC
   -D EXT_SPI_RST=-1  ; RES
   -D EXT_SPI_CS=10
	;-D USE_HID ;Bluetooth キーボード接続処理は Bluetooth Classic なので使えなさそう。
	;-DARDUINO_USB_MODE=1
	;-DARDUINO_USB_CDC_ON_BOOT=1
	;-D USE_SPEAKER_G25
lib_deps = 
	m5stack/M5Unified
	https://github.com/m5stack/M5GFX.git
	https://github.com/pfeerick/elapsedMillis